<!DOCTYPE html>

{#
|--------------------------------------------------------------------------
| Master page template
|--------------------------------------------------------------------------
|
| This template that is extended by all views in PayPerCallConnect.
|
| DO NOT USE THIS TEMPLATE DIRECTLY. Extend a page template that extends
| this one instead (see application/views/template).
|
#}

<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>{{ constant('APP_NAME', ewebify) }}</title>
    <link rel="shortcut icon" href="{{ asset('media/location-icon.png') }}" >

    <script type="text/javascript" src="{{ asset('js/lib/require.js') }}" ></script>

    <script type="text/javascript">
        try {
            require(['/js/config.js'], function(){});

            require(['/js/lib/modules/app.js'], function(PAPALOCAL) {
                "use strict";

                // fix object nest
                PAPALOCAL = PAPALOCAL.PAPALOCAL;

               PAPALOCAL.initScripts.push(function(){
                       // Telephone number mask
                       $('input[type="tel"]').on('keyup focus change', function(e) {
                           $(this).mask('(000) 000-0000');
                       });
                       $('.tel-mask').mask('(000) 000-0000');

                       // Money mask
                       $('.money-usd').on('keyup focus change', function(e) {
                           $(this).mask('0,000', {reverse: true});
                       });
                       $('.money-usd').mask('0,000', {reverse: true});

                       // Card number mask
                       $('.card-num').on('keyup focus change', function(e) {
                           $(this).mask('0000 0000 0000 0000');
                       });
                       $('.card-num').mask('0000 0000 0000 ####');

                       // Security code mask
                       $('.security-code').on('keyup focus change', function(e) {
                           $(this).mask('0000');
                       });
                       $('.security-code').mask('000#');

                       // Expiration year mask
                       $('.exp-yr').on('keyup focus change', function(e) {
                           $(this).mask('00');
                       });
                       $('.exp-yr').mask('00');
               });

               // execute when doc is done loading
               $(document).ready(function() {
                   //run initialization scripts for PAPALOCAL object.
                   PAPALOCAL.initialize();

                   // Select default destination of a referral
                   if ($('[name=referralDestination]').val() == 'agreement') {
                       $('#sendToAgreement').removeClass('hide');
                       $('#sendToContact').addClass('hide');
                   } else {
                       $('#sendToAgreement').addClass('hide');
                       $('#sendToContact').removeClass('hide');
                   }

                   // attach notification scroll
                   $('#notification-tray').on('scroll', function() {
                       scrollNotifications();
                   });

                   // open tabbed nav panel
                   switch (window.location.href.split('/').pop()) {
                       case 'profile#userPanel' :
                           $('ul.nav-tabs>li>a[href="#userPanel"]').tab('show');
                           break;
                       case 'profile#paymentPanel' :
                           $('ul.nav-tabs>li>a[href="#paymentPanel"]').tab('show');
                           break;
                       case 'profile#transactionPanel':
                       case 'profile#userPanel' :
                           $('ul.nav-tabs>li>a[href="#transactionPanel"]').tab('show');
                           break;
                       default:
                           break;
                   }

                   // mask input fields
                   // Telephone number mask
                   $('input[type="tel"]').each(function() {
                        $(this).mask('(000) 000-0000');
                   });

                   $('.tel-mask').each(function() {
                       $(this).mask('(000) 000-0000');
                   });

                   // Money mask
                   $('.money-usd').each(function() {
                       $(this).mask('0,000', {reverse: true});
                   });

                   // Card number mask
                   $('.card-num').each(function() {
                       $(this).mask('0000 0000 0000 0000');
                   });

                   // Security code mask
                   $('.security-code').each(function() {
                       $(this).mask('0000');
                   });

                   // Expiration year mask
                   $('.exp-yr').each(function() {
                       $(this).mask('00');
                   });

                   $('.notification-card').each(function() {
                       $(this).off('click').on('click', PAPALOCAL.notifications.handleTrayItemClick);
                   });
               });

                /*
                |--------------------------------------------------------------------------
                | Utility Functions
                |--------------------------------------------------------------------------
                |
                | Useful functions for performing general tasks within the front-end.
                |
                */

                /**
                 * Sets the view's perspective relative to the chosen company.
                 * A selection affects how the application loads data.
                 *
                 * @param companyGuid
                 */
                function selectCompany(companyGuid) {

                    var requestData = {
                        id: companyGuid
                    };

                    $.ajax({
                        headers: {
                            Accept: "application/json; charset=utf-8"
                        },
                        type: 'POST',
                        contentType: 'application/json',
                        url: PAPALOCAL.baseUrl + 'company/profile',
                        data: JSON.stringify(requestData),
                        dataType: "json",
                        success: function(data, textStatus, jqXHR) {

                            // empty content in panel
                            $('#companyPanel').empty();

                            // add current data to  panel body
                            $('#companyPanel').append(data.view);
                            PAPALOCAL.attachEventHandlers();

                            //show company name in user header when selected
                            $('.search-company.btn-group .dropdown-toggle .filter-option').css("visibility", "visible");

                        },
                        error: function(jqXHR, textStatus, errorThrown) {
                            PAPALOCAL.alert(PAPALOCAL.messages.actionFailed, 'danger');
                        }
                    });
                }

                /**
                 * Open the company perspective selector.
                 */
                function openCompanySelector() {
                    $('#company-select').selectpicker('toggle');
                }

                /*
                 * when a collapsed div is shown, hide all other collapsible divs that are visible
                 */
                $('.feed-display').on('show.bs.collapse', function () {
                    $('.feed-display').not($(this)).collapse('hide');
                });

                /*
                 * when a collapsed div is shown, hide all other collapsible divs that are visible
                 */
                $('#call-note, #call-score, #call-audio, #referral-note, #referral-score').on('show.bs.collapse', function () {
                    $('#call-note, #call-score, #call-audio, #referral-note, #referral-score').not($(this)).collapse('hide');
                });

                /* Prevent the feed-display from getting hidden on second click of feed-card */
                $('div.feed-card-container>div.panel-heading, div.feed-card-container>div.panel-body').on('click',function(e){

                    var id = $(this).attr('href');

                    if ($('#feed-detail').find(id).hasClass('in')) {
                        e.stopPropagation();
                    }

                });

                /* Hide single header feed card body container */
                $("div#single-header-feed-card").parent().css( "display", "none" );


                /* Toggle feed card and feed display on mobile */
                if ($(window).width() <= 767){

                    $("#feed-detail-container").toggleClass('hide');

                    $('div.feed-card-container>div.panel-heading, div.feed-card-container>div.panel-body, #feed-back-button').on('click',function(e){
                        $('#feed-item-container, #feed-detail-container, #feed-back-button').toggleClass('hide');
                    });
                }

                /*
                 |--------------------------------------------------------------------------
                 | Page reload trigger
                 |--------------------------------------------------------------------------
                 |
                 | This trigger will reload the page automatically when a user go above or below a screen size of 767px
                 |
                 | This is needed because the feed columns interaction/behavior changes at 767px
                 |
                 */
                if ($('div').is('#feed-page'))
                {
                    var ww = $(window).width();
                    var limit = 767;

                    var timeOutRefresh = function() {
                        ww = $(window).width();
                        var w = ww < limit ? (location.reload(true)) : ( ww > limit ? (location.reload(true)) : ww = limit );
                    }

                    var tOut;
                    $(window).resize(function () {
                        var resW = $(window).width();
                        clearTimeout(tOut);
                        if ((ww > limit && resW < limit) || (ww < limit && resW > limit)) {
                            tOut = setTimeout(timeOutRefresh, 100);
                        }
                    });
                }

                /*
                 |--------------------------------------------------------------------------
                 | Application Helpers
                 |--------------------------------------------------------------------------
                 |
                 | The functions in this section are required by the application to
                 | ensure the expected behaviour of the UI.
                 |
                 */

                /**
                 * Button Toggles.
                 *
                 * The event handlers below control the conversion of buttons when the user interacts.
                 * Example: When user clicks the main hamburger menu, the button changes to a red (X).
                 */
                $('#addMenu').on('show.bs.modal hidden.bs.modal', function(){
                    $('#btn-add-menu>i.fa').toggleClass('fa-plus-circle fa-times-circle')
                });

                $('.dropup').on('show.bs.dropdown hide.bs.dropdown', function() {
                    $('#btn-burger-menu>i.fa').toggleClass('fa-bars fa-times-circle');
                });

                /**
                 * Automatically reset modal forms when modal closed.
                 */
                $('.content-menu-modal').on('hidden.bs.modal', function() {
                    // clear alerts
                    $(this).find('.alert').remove();

                    //clear any forms in the modal
                    if ($(this).find('form').length) {
                        PAPALOCAL.form.clear($(this).find('form'));
                    }
                });

                /**
                 * Toggle caret up and down
                 */
                $('.panel-group').on('show.bs.collapse hidden.bs.collapse', function(e) {
                    $(e.target)
                        .prev('.panel-heading')
                        .find(".caret-up-down")
                        .toggleClass('fa-caret-up fa-caret-down');
                });

                /**
                 * Initialize all tooltips
                 */
                $(function () {
                    $('[data-toggle="tooltip"]').tooltip();
                });

                /*
                |--------------------------------------------------------------------------
                | Form Helpers
                |--------------------------------------------------------------------------
                |
                | The functions in this section are used to when handling modal forms.
                |
                */

                /**
                 * Shows company form fields when checkbox is clicked & add 'required' to company inputs when checked.
                 */
                $('input[name=businessOwner]').change(function() {
                    $("#companyOwnerForm").toggleClass("hidden");
                    if ($('input[name=businessOwner]').prop('checked')){
                        $('input[name=companyName]').prop('required', true);
                        $('input[name=companyEmail]').prop('required', true);
                        $('input[name=companyPhoneNumber]').prop('required', true);
                        $('input[name=companyAddress]').prop('required', true);
                    } else {
                        $('input[name=companyName]').prop('required', false);
                        $('input[name=companyEmail]').prop('required', false);
                        $('input[name=companyPhoneNumber]').prop('required', false);
                        $('input[name=companyAddress]').prop('required', false);
                    }
                });


                /**
                 * Unchecks and hides company form fields when modal closes.
                 */
                $("#register-dismiss").click(function() {
                    $("#companyOwnerForm").addClass("hidden");
                    $('input[name=businessOwner]').prop('checked', false);
                });

                /**
                 * Triggers the keyboard "Enter" event
                 */
                $("input").keydown(function(event) {
                    if (event.keyCode === 13) {
                        if ($(this).closest('form').data('type') === 'inline') {
                            $(this).closest('form').find('input:submit').click();
                            return false;
                        }
                    }
                });

                /**
                 * Scroll handler to load more notifications.
                 */
                var scrollNotifications = function() {
                    /*
                     * Check if notification is scroll to be bottom of the list
                     */
                    if ($('#notification-tray')[0].scrollHeight - $('#notification-tray').scrollTop() === $('#notification-tray')[0].clientHeight) {

                        PAPALOCAL.spinner.open();
                        var originalScrollHeight = $('#notification-tray').scrollTop();

                        // clone current tray and remove last row
                        var newTray = $('#notification-tray').clone();

                        var lastRow = $(newTray).children().last();
                        var scrollIndicator = $(lastRow).children(0).data('index');


                        $(newTray).children().last().remove();

                        if (scrollIndicator === -1) {
                            // This is the index of the last element of the notification tray.
                            // no more notifications for user
                            PAPALOCAL.spinner.close();
                            return;
                        }

                        var lastNotificationIndex = scrollIndicator;
                        var csrf_token = $(lastRow).children(0).data('csrf');

                        $.ajax({
                            headers: {
                                Accept: "application/json; charset=utf-8"
                            },
                            type: 'POST',
                            contentType: 'application/json',
                            url: PAPALOCAL.baseUrl + "account/notification/load",
                            data: JSON.stringify({index: lastNotificationIndex, _csrf_token: csrf_token}),
                            dataType: "json",
                            success: function(data, textStatus, jqXHR) {

                                // append payload to notification tray
                                $(newTray).append(data.payload);
                                $('#notification-tray').replaceWith($(newTray));
                                $('#notification-tray').scrollTop(originalScrollHeight);
                                $('#notification-tray').on('scroll', function() {scrollNotifications()});
                                // reset affected event handlers
                                $('.notification-card').each(function() {
                                    $(this).off('click').on('click', PAPALOCAL.notifications.handleTrayItemClick);
                                });
                            },
                            error: function(jqXHR, textStatus, errorThrown) {
                                PAPALOCAL.alert(PAPALOCAL.messages.actionFailed, 'danger');

                                // put last row back to original value
                                $(newTray).append(lastRow);
                                $('#notification-tray').replaceWith($(newTray));

                            }
                        });



                        PAPALOCAL.spinner.close();
                    }
                }
            });

        } catch (error) {
            console.error(error);
        }
    </script>

    {%  block stylesheets %}<!-- stylesheet block -->

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" async>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" async>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/css/bootstrap-select.min.css" async>

    <link rel="stylesheet" href="{{ asset('css/style.css') }}">
    <link rel="stylesheet" href="{{ asset('css/layout.css') }}">
    <link rel="stylesheet" href="{{ asset('css/media.css') }}">

    {% endblock %}<!-- end stylesheet block -->




     {#Mobile Desktop Icons #}
     {#Android reads these links as well as iOS #}
    <link rel="apple-touch-icon" sizes="57x57" href="{{ asset('media/agreement-icon.png') }}" />
    <link rel="apple-touch-icon" sizes="72x72" href="{{ asset('media/agreement-icon.png') }}" />
    <link rel="apple-touch-icon" sizes="114x114" href="{{ asset('media/agreement-icon.png') }}" />
    <link rel="apple-touch-icon" sizes="144x144" href="{{ asset('media/agreement-icon.png') }}" />

    <style>
        .ui-autocomplete {
            max-height: 200px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
        }
        /* IE 6 doesn't support max-height
         * we use height instead, but this forces the menu to always be this tall
         */
        * html .ui-autocomplete {
            height: 200px;
        }
        .ui-autocomplete {
            z-index: 215000000 !important;
        }
    </style>


    {# Inject js/css resources into the header. #}
    {% block headerResources %}

        {# Allow resource injection form controller #}
        {% if headerResources is defined and headerResources is not empty %}
            {% for resource in headerResources %}

                {{ resource | raw }}

            {% endfor %}
        {% endif %}

    {% endblock %}


</head>

<body>


<div class="container-fluid alert-notification">
    <div class="row">
        <div class="col-lg-3 col-sm-2 col-xs-1"></div>
        <div id="notifications" class="col-lg-6 col-sm-8 col-xs-10"></div>
        <div class="col-lg-3 col-sm-2 col-xs-1"></div>
    </div>
</div>



<div class="container-fluid">
    <div class="row">

            {% block header %}

            {% endblock %}


            {% block body %}

            {% endblock %}

            {% block footer %}

            {% endblock %}

        </div>
    </div>

    {% block modals %}
        {% include 'fragments/spinner.html.twig' %}
    {% endblock %}

    {% block javascripts %}<!-- javascript files -->

    {% endblock %}<!-- end javascript files -->


    {# Inject js/css resources into the footer. #}
    {% block footerResources %}

        {% if footerResources is defined and footerResources is not empty %}

            {% for resource in footerResources %}

                {{ resource | raw }}

            {% endfor %}

        {% endif %}

    {% endblock %}

</body>
</html>